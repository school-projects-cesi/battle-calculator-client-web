@import 'functions';

// Responsive
// ==================
@mixin up($breakpoint) {
	$size: strip-unit(map-get($breakpoints, $breakpoint));
	@media (min-width: $size * 1px) {
		@content;
	}
}
@mixin down($breakpoint) {
	$size: strip-unit(map-get($breakpoints, $breakpoint));
	@media (max-width: $size * 1px) {
		@content;
	}
}
@mixin between($breakpointDown, $breakpointUp) {
	$down: strip-unit(map-get($breakpoints, $breakpointDown));
	$up: strip-unit(map-get($breakpoints, $breakpointUp));
	@media (min-width: $down * 1px) and (max-width: $up * 1px) {
		@content;
	}
}

// Espacement
// ==================
@mixin container($width, $padding) {
	width: 100%;
	padding-left: $padding;
	padding-right: $padding;

	@include up($width + 2 * $padding) {
		padding-left: calc(50vw - #{$width / 2});
		padding-right: calc(50vw - #{$width / 2});
	}
}

// Typographie
// ==================
@mixin font-face(
	$name,
	$path,
	$weight: null,
	$style: null,
	$exts: eot woff2 woff ttf svg
) {
	$src: null;

	$extmods: (
		eot: '?',
		svg: '#' + str-replace($name, ' ', '_'),
	);

	$formats: (
		otf: 'opentype',
		ttf: 'truetype',
	);

	@each $ext in $exts {
		$extmod: if(
			map-has-key($extmods, $ext),
			$ext + map-get($extmods, $ext),
			$ext
		);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append(
			$src,
			url(quote($path + '.' + $extmod)) format(quote($format)),
			comma
		);
	}

	@if length($weight) == 1 {
		@font-face {
			font-family: quote($name);
			font-style: $style;
			font-weight: $weight;
			src: $src;
		}
	} @else {
		$weights: $weight;
		@each $weight in $weights {
			$suffix: map-get(
				(
					200: ExtraLight,
					300: Light,
					400: Regular,
					500: Medium,
					600: SemiBold,
					700: Bold,
					900: Black,
				),
				$weight
			);
			@include font-face(
				$name,
				$path + '-' + $suffix,
				$weight,
				$style,
				$exts
			);
		}
	}
}

@mixin text3d($color: red, $x: 1, $y: 1, $darken: 2) {
	color: $color;
	text-shadow: 0px 0px 0 darken($color, 14%),
		$x * 1px $y * 1px 0 darken($color, $darken * 15),
		$x * 2px $y * 2px 0 darken($color, $darken * 16),
		$x * 3px $y * 3px 0 darken($color, $darken * 17),
		$x * 4px $y * 4px 0 darken($color, $darken * 18),
		// $x * 5px $y * 5px 0 darken($color, $darken * 19),
		// $x * 6px $y * 6px 0 darken($color, $darken * 20),
		// $x * 7px $y * 7px 0 darken($color, $darken * 21),
		// $x * 8px $y * 8px 0 darken($color, $darken * 22),
		// $x * 9px $y * 9px 0 darken($color, $darken * 23),
		// $x * 10px $y * 10px 0 darken($color, $darken * 24),
		// $x * 11px $y * 11px 0 darken($color, $darken * 25),
		// $x * 12px $y * 12px 0 darken($color, $darken * 26),
		$x * 5px $y * 5px 12px rgba(0, 0, 0, 0.55),
		$x * 5px $y * 5px 1px rgba(0, 0, 0, 0.25);
}
